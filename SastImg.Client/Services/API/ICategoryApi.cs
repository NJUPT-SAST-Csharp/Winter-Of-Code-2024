// <auto-generated>
//     This code was generated by Refitter.
// </auto-generated>


using Refit;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using System.Threading;
using System.Threading.Tasks;
using SastImg.Client.Service.API;

#nullable enable annotations

namespace SastImg.Client.Service.API
{
    /// <summary>CreateCategory</summary>
    [System.CodeDom.Compiler.GeneratedCode("Refitter", "1.5.0.0")]
    [Headers("Authorization: Bearer")]
    public partial interface ICategoryApi
    {
        /// <summary>CreateCategory</summary>
        /// <remarks>
        /// Create a new category.
        /// 
        /// Require ADMIN.
        /// </remarks>
        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>200</term>
        /// <description>OK</description>
        /// </item>
        /// </list>
        /// </returns>
        [Post("/api/categories")]
        Task<IApiResponse> CreateCategoryAsync([Body] CreateCategoryRequest body, CancellationToken cancellationToken = default);

        /// <summary>GetCategories</summary>
        /// <remarks>Get all available categories.</remarks>
        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>200</term>
        /// <description>OK</description>
        /// </item>
        /// </list>
        /// </returns>
        [Headers("Accept: text/plain, application/json, text/json")]
        [Get("/api/categories")]
        Task<IApiResponse<ICollection<CategoryDto>>> GetCategoryAsync(CancellationToken cancellationToken = default);

        /// <summary>UpdateName</summary>
        /// <remarks>
        /// Update the name of the specific category.
        /// 
        /// Require ADMIN.
        /// </remarks>
        /// <param name="id">The id of the category. Can convert to long.</param>
        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>200</term>
        /// <description>OK</description>
        /// </item>
        /// </list>
        /// </returns>
        [Post("/api/categories/{id}/name")]
        Task<IApiResponse> UpdateCategoryNameAsync(long id, [Body] UpdateCategoryNameRequest body, CancellationToken cancellationToken = default);

        /// <summary>UpdateDescription</summary>
        /// <remarks>
        /// Update the name of the specific category.
        /// 
        /// Require ADMIN.
        /// </remarks>
        /// <param name="id">The id of the category. Can convert to long.</param>
        /// <returns>
        /// A <see cref="Task"/> representing the <see cref="IApiResponse"/> instance containing the result:
        /// <list type="table">
        /// <listheader>
        /// <term>Status</term>
        /// <description>Description</description>
        /// </listheader>
        /// <item>
        /// <term>200</term>
        /// <description>OK</description>
        /// </item>
        /// </list>
        /// </returns>
        [Post("/api/categories/{id}/description")]
        Task<IApiResponse> UpdateCategoryDescriptionAsync(long id, [Body] UpdateCategoryDescriptionRequest body, CancellationToken cancellationToken = default);
    }

}